---
import MainLayout from "@layouts/MainLayout.astro";
import { getProducts } from "@api/apiWoocomerce";
import { ButtonBack } from "@components/buttons/ButtonBack";
import { ProductDetailAction } from "@components/products/ProductDetailAction";
import notFoundImg from "@assets/products/not found.png";
import { Image } from "astro:assets";

export const prerender = true;

const { id } = Astro.params;

export async function getStaticPaths() {
  try {
    const response = await getProducts()

    const paths = response.map(product => ({
      params: { id: product.id.toString() }
    }))

    return paths
  } catch (error) {
    console.error('Error fetching products:', error)
    throw error
  }
}

async function fetchProducts() {
  const products = await getProducts();
  const findProduct = products.find((product: any) => product.id == id);
  return findProduct;
}

const { name, images, description, sku, tags, categories } = await fetchProducts();

const parsedProduct = {
  id: id,
  name: name,
  description: description.replace(/<[^>]*>?/gm, ""),
  sku: sku,
  brand: tags[0]?.name,
  img: images[0] ? images[0].src : null,
};
---

<MainLayout
  title={name + " | Productos Diprofire"}
  description={"Detalles de nuestro producto: " + name}
>
  <main
    class="mx-auto max-w-7xl px-4 sm:px-10 pt-24 pb-8 md:py-48 grid items-center"
  >
    <div class="w-fit mx-auto">
      <ButtonBack
        href="/productos"
        style="mb-10 bg-green-transparent hover:bg-gray-200 duration-200 rounded-md pr-3 py-1"
      >
        Volver a productos
      </ButtonBack>
      <div
        class="grid grid-cols-1 md:grid-cols-2 gap-10 md:gap-20 lg:gap-24 justify-between items-center"
      >
        <div class="w-full order-2 md:order-1">
          <h1 class="font-bold text-3xl md:text-4xl pb-4 text-green-600">
            {name}
          </h1>
          {
            description === "" ? (
              <p class="opacity-80">Sin descripción</p>
            ) : (
              <p>{description.replace(/<[^>]*>?/gm, "")}</p>
            )
          }
          <div class="my-6">
            <h2 class="pb-2 pt-4 text-lg md:text-xl font-semibold">
              Información adicional:
            </h2>
            <p>SKU: {sku}</p>
            <p>Marca: {tags[0]?.name}</p>
          </div>
          <ProductDetailAction product={parsedProduct} client:visible />
          <div class="flex flex-wrap items-center gap-4 mt-8">
            {
              categories.map((category: any) =>
                category.name !== "Sin categorizar" ? (
                  <div class="text-sm flex flex-wrap gap-2">
                    <p class="font-medium">Etiquetas:</p>
                    <p class="px-2 border border-gray-300 rounded-md py-1">
                      {category.name}
                    </p>
                  </div>
                ) : null,
              )
            }
          </div>
        </div>
        {
          images.length === 0 ? (
            <Image
              src={notFoundImg}
              alt={name}
              class="w-full order-1 md:order-2 max-w-[300px] aspect-square object-cover bg-white rounded-md shadow-sm"
            />
          ) : (
            <img
              src={images[0].src}
              class="w-full order-1 md:order-2 max-w-[300px] aspect-square object-cover bg-white rounded-md shadow-sm"
              alt={images[0].alt}
            />
          )
        }
      </div>
    </div>
  </main>
</MainLayout>
